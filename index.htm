<html>
<head>

<link rel="stylesheet" href="styles.css?1"/>

<title>Disney Services Test</title>
<script language="javascript">
let DisneyService=new function(){
this.dataSource="https://cd-static.bamgrid.com/dp-117731241344/home.json";
//this.dataSource="test.json";
this.refRoot="https://cd-static.bamgrid.com/dp-117731241344/sets/"; 
this.container="";
this.viewable=4;
this.prefill=0;
this.cursor=0;
this.initted=false;
this.filledRows=0;
this.dt="";
this.user={
row:0,
col:0,
active:""
}



this.getData=(source,callback)=>{
	fetch(source)
		.then((response)=>response.json())
		.then((data)=>{callback(data)});
}

this.parse=(contents)=>{
	return contents.data.StandardCollection;
}

this.grabImageUrl=(content)=>{
	for (var z in content){
		var url=content[z];
		for (var x in content[z]){
			url=content[z][x];
			for (var y in url){
				return url[y].default.url;
			}
		}
		break;
	}
}

this.installShelving=(content,holder)=>{
	var count=0;
	for (var x of content.containers){
		var sholder=this.renderBlock(holder,{id:"shelf"+count, url:"", class: "shelf", text: ""});
		this.renderBlock(sholder,{id:"", url:"", class: "shelfTitle", text: x.set.text.title.full.set.default.content});
		var shelf=this.renderBlock(sholder,{id:"", url:"", class: "shelfItems", text: ""});
		var block=this.renderBlock(shelf,{id:x.set.setId, url:"", class: "shelfSet", text: ""});
		count++;
	}
}

this.loadNextRow=(rowIndex)=>{
	var g=document.getElementById("shelf"+rowIndex);
	var fillrow=g.firstChild.nextSibling.firstChild;
	this.fillItems(fillrow,this.filledRows);
}

this.fillRow=(data,id)=>{
	var refset=Object.values(Object.values(data)[0])[0];
	this.fillShelf(refset.items,refset.setId,document.getElementById("shelf"+this.filledRows).firstElementChild.nextSibling.firstElementChild);
	
}

this.fillItems=(row,id)=>{
	fetch(this.refRoot+this.dt.containers[id].set.refId+".json")
	.then((response)=>response.json())
	.then((data)=>this.fillRow(data,id));
}

this.fillShelf=(items,catId,filldiv)=>{
	if (items){
		for (var y of items){
			var url=this.grabImageUrl(y.image);
			var aimg=this.renderBlock(filldiv, {id:y.contentId ,url: url,text: "", class: "content"});
			if (!this.initted){this.setActive(aimg.firstChild);this.initted=true;}
		}
		
	}
	this.filledRows++;
}


this.fillShelves=(content,holder)=>{
	var x=this.cursor;
	while(x<(this.viewable+this.prefill)){
		this.fillShelf(content.containers[x].set.items,content.containers[x].set.setId,document.getElementById(content.containers[x].set.setId));
		++x;
	}
	return true;
}




this.setActive=(content)=>{
	if(!content){return false;}	
	this.user.active=content;
	this.user.active.classList.add("active");
	if (this.user.lastActive){
		this.user.lastActive.classList.remove("active");
	}
	this.user.lastActive=this.user.active;
}




this.renderBlock=(blockParent, contents)=>{
	var block=this.scaffold(blockParent,contents.id);
	block.className=contents.class;
	if (contents.url!=""){
		var i=new Image(160,90);
		i.src=contents.url;
		i.alt=contents.text;
		i.dataset.refid=contents.id;
		block.appendChild(i);
		i.onerror=()=>{i.src="noimage.jpg";}
		}
	else{
		block.innerText=contents.text;
	}
	return block;
}


this.fill=(data)=>{
	var fillRef=document.getElementsByTagName("body");
	this.container=this.scaffold(fillRef[0],"container");
	var parsedata=this.parse(data);
	this.installShelving(parsedata,this.container);
	this.fillShelves(parsedata,this.container);
	this.dt=parsedata;
	this.setActive(document.getElementById("shelf0").children[1].firstChild.firstChild);
};

this.scaffold=(parentContainer,id)=>{
	var fillChild=document.createElement("div");
	fillChild.id=id;	
	parentContainer.appendChild(fillChild);
    return fillChild;
};

this.nav=(e)=>{
	e.preventDefault();
	e.stopPropogation=true;
	var dir=e.keyCode;
	if (dir==13||dir==32){
		this.launchInfo();
	}
	else{
		this.move(dir-38);
	}
	e.bubbles=false;
	return false;
}

this.move=(dir)=>{
	((dir%2)==0)?this.moveVert(dir-1):this.moveHorz(dir);
}

this.moveHorz=(dir)=>{
	this.setActive(this.user.active[((dir<0)?"previous":"next")+"Sibling"]);
}

this.moveVert=(dir)=>{
	this.loadNextRow(this.filledRows);
	this.cursor=Math.max(dir+this.cursor,0);
	this.setActive(document.getElementById("shelf"+this.cursor).children[1].firstChild.firstChild);
}

this.launchInfo=()=>{
//todo:launch video
//fetch(this.refRoot+this.user.active.id+".json")
//fetch("https://cd-static.bamgrid.com/dp-117731241344/sets/327aeff3-fe4d-4971-ad95-a78acc884079.json")
//.then((response)=>console.log(response.json()));
}

this.init=()=>{
	window.onkeyup=this.nav;
	this.getData(this.dataSource,this.fill);
};

window.onload=this.init;
}();


</script>
</head>
<body>



</body>
</html>